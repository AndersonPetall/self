注解开发
   注解开发bean
   纯注解开发
   
注解开发bean
  实用@Component定义bean
   @Component("bookDao")
   public class BookDaoImpl implements BookDao{}
   @Component
   public class BookServiceImpl implements BookService{}
  核心配置文件中通过组件扫描加载bean
    <context:component-scan base-package="com.itheima" />
    
Spring提供@Component注解的三个衍生注解
  @Controller: 用于表现层bean定义
  @Service: 用于业务层bean定于i
  @Repository: 用于数据层bean定义
  
   @Repository("bookDao")
   public class BookDaoImpl implements BookDao{}
   @Service
   public class BookServiceImpl implements BookService{}



Spring3.0 升级了纯注解开发模式,实用Java类代替配置文件,开启了Spring快速开发赛道
  Java类代理Spring核心配置文件  删去applicationContext.xml,增添SpringConfig.java
   @Configuration    //声明当前类为Spring配置类
   @ComponentScan({"com.itheima.service","com.itheima.dao"})  //设置bean扫描路径，多个路径书写为字符串数组格式
   public class SpringConfig {}

  加载配置文件初始化容器  ApplicationContext ctx = new ClassPathXmlApplicationContext("applicationContext.xml");
  ==>  
  加载配置类初始化容器  ApplicationContext ctx = new AnnotationConfigApplicationContext(SpringConfig.class);
  
  
  


bean的管理
  bean作用范围  @Scope
  bean生命周期  @PostContruct @PreDestroy
  
  @Configuration
  @ComponentScan("com.itheima")
    public class SpringConfig {}
    
  @Repository//@Scope设置bean的作用范围
  @Scope("singleton")
  public class BookDaoImpl implements BookDao {
    public void save() {System.out.println("book dao save ...");}
    @PostConstruct//@PostConstruct设置bean的初始化方法
    public void init() { System.out.println("init ...");}
    @PreDestroy//@PreDestroy设置bean的销毁方法
    public void destroy() {System.out.println("destroy ...");}}
    
    


注解开发依赖注入
  使用 @AutoWired 注解开启自动装配模式(按类型)
    注意: 自动装配基于反射设计创建对象并且暴力反射对应属性为私有属性初始化数据,因此无需提供setter方法
    注意: 自动装配建议使用无参构造方法创建对象(默认),如果不提供对应的构造方法,请提供唯一的构造方法
    注意: @Qualifier 注解无法单独使用,必须配合@Autowired注解使用
  @Service 
  public class BookServiceImpl implements BookService{
    @Autowired
    @Qualifier("bookDao")
    private BookDao bookDao;
    public void save(){bookDao.save();}}
  使用@Value实现简单类型注入
  @Repository("bookDao")
  public class BookDaoImpl implements BookDao{
    @Value("100")
    private String connectionNum;}
    
    
    
第三方bean管理
  管理 & 依赖注入
  
    
