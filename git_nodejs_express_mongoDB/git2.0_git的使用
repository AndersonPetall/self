起始配置
git config --global user.name "Your name"
git config --global user.email "123@gmail.com"
查看配置信息
git config -l


基本操作
1.0 创建并且进入空文件夹
2.0 右键->点击Git Bash Here启动命令行
3.0 git init仓库初始化
4.0 创建一个初始化文件index.html
5.0 git add index.html将文件加入到暂存区
6.0 git commit -m '注释'  提交到仓库,m代表message

git log 查看历史版本
git status 查看当前目录所有文件状态

初始化 ==>  编辑  ==>  加入暂存区  ==>  提交
编辑
  vim 
  Hbuilder
  资源管理操作
加入暂存区
  git add 文件名  (实际上是添加修改)
  git add A
提交
  git commit -m '文本注释'
  git commit(出现vim编辑窗口,输入注释,保存退出)




.git目录
  hook目录包含客户端或服务端的钩子脚本,在特定操作下自动执行
  info信息文件夹,包含一个全局性排除文件,可以配置文件忽略
  logs保存日志信息
  objects 目录储存所有数据内容, 本地的版本库存放位置
  refs目录储存指向数据的提交对象的指针(分支)
  config文件包含项目特有的配置选项
  description用来显示对仓库的描述信息
  HEAD文件指示目前被检出的分支
  index暂存区文件,是一个二进制文件(git ls-files)
切记: 不要手动去修改.git文件夹中的内容



版本库的三个区域
  工作区(代码编辑区)  ==> .git所在的项目文件夹(当前文件夹的所有文件)
  暂存区(修改待提交区)  ==>  .git中的index文件
  仓库区(代码保存区)  ==>  .git中的objects文件夹
创建文件xxx==> 工作区 == git add xxx==> 暂存区  ==git commit==>  仓库区
  
git的常用命令
  git log  查看历史版本
  git ls-files  查看暂存区的文件内容
  git status  版本状态查看(查看当前目录所有文件状态)
  git add -A  添加所有新文件到暂存区
  git commit -m '注释'  提交修改并且注释
  dit diff  查看工作区与暂存区的差异(不显示新增文件) 显示做了哪些修改
  dig diff --cached  查看暂存区与仓库的差异
